name: Docker Buildx Build
on:
  pull_request:
  push:
    branches:
      - master
  # schedule:
  #   - cron: '42 2 * * 2'

jobs:
  docker-build-upx:
    runs-on: ubuntu-20.04
    services:
      registry:
        image: registry:2
        ports:
          - '5000:5000'
    env:
      DOCKER_BUILDKIT: 1
      DOCKER_CLI_EXPERIMENTAL: enabled
    steps:
    - name: enable experimental mode
      run: |
        mkdir -p ~/.docker
        echo '{"experimental": "enabled"}' > ~/.docker/config.json
    - uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1.2.0
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1.6.0
      with:
        version: v0.5.1
        driver-opts: |
          image=moby/buildkit:buildx-stable-1
          network=host
    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}
    - name: Build (non-master branch)
      run: |
        docker buildx build \
          --platform linux/amd64,linux/arm64,linux/arm/v6,linux/arm/v7 \
          --tag localhost:5000/upx:latest \
          --push \
          upx/
      if: github.repository == 'hairyhenderson/dockerfiles'
    - name: Run Trivy vulnerability scanner (table output)
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'localhost:5000/upx:latest'
        format: 'table'
        exit-code: 1
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'localhost:5000/upx:latest'
        format: 'template'
        template: '@/contrib/sarif.tpl'
        output: 'trivy-results.sarif'
        exit-code: 1
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: 'trivy-results.sarif'
      if: always() && github.repository == 'hairyhenderson/dockerfiles'
    - name: Login to GHCR
      uses: docker/login-action@v1.10.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      if: github.repository == 'hairyhenderson/dockerfiles' && github.actor == 'hairyhenderson'
    - name: Build & Push (master branch)
      run: |
        docker buildx build \
          --platform linux/amd64,linux/arm64,linux/arm/v6,linux/arm/v7 \
          --tag ghcr.io/hairyhenderson/upx:latest \
          --push \
          upx/
        # Maybe?
        # docker buildx build \
        #   --platform linux/amd64,linux/arm64,linux/arm/v6,linux/arm/v7 \
        #   --tag hairyhenderson/upx:latest \
        #   --push \
        #   upx/
      if: github.repository == 'hairyhenderson/dockerfiles' && github.actor == 'hairyhenderson' && github.ref == 'refs/heads/master'
